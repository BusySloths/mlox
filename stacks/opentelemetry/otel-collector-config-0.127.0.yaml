receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
        tls:
          cert_file: /etc/cert.pem
          key_file: /etc/key.pem
      http:
        endpoint: 0.0.0.0:4318
        tls:
          cert_file: /etc/cert.pem
          key_file: /etc/key.pem

exporters:
  # otlphttp:
  #   endpoint: ${env:MY_OTEL_RELIC_ENDPOINT}
  #   headers:
  #     api-key: ${env:MY_OTEL_RELIC_KEY}
  # redis:
  #   endpoint: "redis:6379" # This assumes your Redis service in Docker Compose will be named 'redis'
    # You can add other options like password, db, tls if needed
    # e.g., password: ${env:REDIS_PASSWORD}
  file:
    path: /etc/otelcol/telemetry.json # Path inside the container where data will be written
    rotation:
      max_megabytes: 10    # Rotate file when size exceeds 100MB
      max_backups: 5        # Keep up to 5 rotated files
  debug:
    verbosity: detailed

processors:
  batch:

# connectors:
#   spanmetrics:
#     namespace: myspanmetrics

extensions:
  health_check:
    endpoint: "0.0.0.0:13133" 
    path: "/health/status" 
    tls:
      cert_file: /etc/cert.pem
      key_file: /etc/key.pem
    check_collector_pipeline: 
      enabled: true 
      interval: "5m" 
      exporter_failure_threshold: 5   

service:
  extensions: [health_check]
  pipelines:
    traces:
      receivers: [otlp]    
      processors: [batch]
      exporters: [debug, file]
    metrics:
      receivers: [otlp]
      processors: [batch]
      exporters: [debug, file]
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [debug, file]
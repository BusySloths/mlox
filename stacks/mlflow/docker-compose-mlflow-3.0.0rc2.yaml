version: "3.8"

services:

  traefik:
    image: traefik:v3.0
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.https.address=:443"
    ports:
      - ${MLFLOW_PORT:-1234}:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro      
    networks:
      - traefik-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https-redirect.redirectscheme.permanent=true"
    deploy:
      placement:
        constraints:
          - node.role == manager

  mlflow:
    image: ghcr.io/mlflow/mlflow:v3.0.0rc2
    environment:
      # - MLFLOW_TRACKING_TOKEN=${MLFLOW_TOKEN:-token}
      # MLFLOW_TRACKING_USERNAME: ${MLFLOW_USERNAME:-admin}
      # MLFLOW_TRACKING_PASSWORD: ${MLFLOW_PASSWORD:-password}
      MLFLOW_AUTH_CONFIG_PATH: "/var/lib/mlflow/mlflow-auth/basic-auth.ini"      
      MLFLOW_FLASK_SERVER_SECRET_KEY: "my-secret-key"
    restart: always
    container_name: mlflow
    command: bash -c "pip install Flask-WTF && mlflow server --host 0.0.0.0:5002 --app-name basic-auth"
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.mlflow-secure.entrypoints=https"
      - "traefik.http.routers.mlflow-secure.rule=Host(`${MLFLOW_URL:-localhost}`)"
      - "traefik.http.routers.mlflow-secure.service=mlflow"
      - "traefik.http.routers.mlflow-secure.tls=true"

      - "traefik.http.services.mlflow.loadbalancer.server.port=5002"
      - "traefik.http.services.mlflow-secure.loadbalancer.server.port=5002"
      
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
      
      - traefik.http.routers.mlflow.middlewares=https-redirect  
    networks:
      - traefik-net
    volumes:
      - ./basic-auth.ini:/var/lib/mlflow/mlflow-auth/basic-auth.ini
      - mlflow-runs:/mlruns
      - mlflow-artifacts:/mlartifacts


volumes:
  # Create a volume to store the certificates, there is a constraint to make sure
  # Traefik is always deployed to the same Docker node with the same volume containing
  # the HTTPS certificates
  traefik-public-certificates:  

  mlflow-runs:

  mlflow-artifacts:

networks:
  traefik-net:
# This is a basic workflow that is manually triggered
name: Update Service

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Example input for the workflow 
    inputs:
      name:
        description: 'Your input here'
        default: 'I have nothing to say'
        # Input has to be provided for the workflow to run
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "greet"
  greet:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Send greeting
      run: echo "Hello ${{ github.event.inputs.name }}"

  # deploy to our airflow server
  build:  
    name: Build
    runs-on: ubuntu-latest
    steps:
      # access through passphrase protected ssh key
      - name: Login to server and update repository, stop and restart docker services
        uses: appleboy/ssh-action@master
        env:
          SUDO_PASSWORD: ${{ secrets.SWARM_SUDO_PASSWORD }}
          TRAEFIK_USERNAME: ${{ secrets.TRAEFIK_USERNAME }}
          TRAEFIK_HASHED_PASSWORD: '${{ secrets.TRAEFIK_HASHED_PASSWORD }}'
          SLUGIFY_USES_TEXT_UNIDECODE: 'yes'
        with:
          host: ${{ secrets.AIRFLOW_HOST }}
          username: ${{ secrets.AIRFLOW_USER }}
          key: ${{ secrets.AIRFLOW_KEY }}
          passphrase: ${{ secrets.AIRFLOW_PASSPHRASE }}
          port: ${{ secrets.AIRFLOW_PORT }}
          envs: SUDO_PASSWORD,TRAEFIK_USERNAME,TRAEFIK_HASHED_PASSWORD,SLUGIFY_USES_TEXT_UNIDECODE
          script: |
            cd repos/flowprovider
            echo "-< 1. Setup GCP Bindings >-"
            echo -E 'Hello\nWorld'
            echo -E '${{ secrets.GCP_ACCESSOR_CREDENTIAL }}' > keyfile.json
            cat keyfile.json
            echo "-< 1. Done >-"
  
            echo "-< 2. Update FlowProvider >-"
            ls -al
            git pull
            ls -al
            echo "-< 2. Done >-"
            
            echo "-< 3. Setup .env file >-"
            touch .env.traefik.prod
            echo "TRAEFIK_USERNAME=${{ secrets.TRAEFIK_USERNAME }}" > .env.traefik.prod
            echo "TRAEFIK_HASHED_PASSWORD=$TRAEFIK_HASHED_PASSWORD" >> .env.traefik.prod
            echo 'cat .env.traefik.prod'
            echo "-"
            echo "-< 3. Done >-"

            echo "-< 4. Check my deploy script. >-"
            ./deploy.sh
            echo "-< 4. Done >-"

            echo "-< ROGER AND OUT >-"
            exit

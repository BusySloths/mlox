version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: test
    # volumes:
    #   - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always

  redis:
    # Redis is limited to 7.2-bookworm due to licencing change
    # https://redis.io/blog/redis-adopts-dual-source-available-licensing/
    image: redis:7.2-bookworm
    expose:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 50
      start_period: 30s
    restart: always
    command:
      - sh
      - -c # this is to evaluate the $REDIS_PASSWORD from the env
      - redis-server --appendonly yes --requirepass $$REDIS_PASSWORD ## $$ because of docker-compose
    environment:
      REDIS_PASSWORD: SDsdgFsfm4lmf43lfnm34lkf


  litellm:
    image: ghcr.io/berriai/litellm:main-latest
    ports:
      - "4000:4000" # Map the container port to the host, change the host port if necessary
    environment:
      - DATABASE_URL=postgresql://test:test@postgres:5432/test
      - LITELLM_MASTER_KEY=\'sk-1234\'
      # - SERVER_ROOT_PATH="/api/v1"
      - SSL_KEYFILE_PATH=/app/ssl.key
      - SSL_CERTFILE_PATH=/app/ssl.crt
      - UI_USERNAME=admin   # username to sign in on UI
      - UI_PASSWORD=admin0123        # password to sign in on UI      
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=SDsdgFsfm4lmf43lfnm34lkf
    volumes:
      - ./litellm-config.yaml:/app/config.yaml # Mount the local configuration file
      - cert.pem:/app/ssl.crt 
      - key.pem:/app/ssl.key
    # You can change the port or number of workers as per your requirements or pass any new supported CLI augument. Make sure the port passed here matches with the container port defined above in `ports` value
    command: [ "--config", "/app/config.yaml", "--port", "4000", "--num_workers", "8" ]

  ollama:
    image: ollama/ollama:latest
    expose:
      - 11434
    volumes:
      - ./ollama/ollama:/root/.ollama
    container_name: ollama 
    pull_policy: always
    tty: true
    restart: always
    environment:
      - OLLAMA_KEEP_ALIVE=24h
      # - OLLAMA_HOST=0.0.0.0

  ollama-webui:
    # image: ghcr.io/ollama-webui/ollama-webui:main 
    image: ghcr.io/open-webui/open-webui:ollama
    volumes:
      - ./data/ollama-webui:/app/backend/data
    depends_on:
      - ollama
    ports:
      - 3002:8080
    environment:
      # - 'OLLAMA_API_BASE_URL=http://ollama:11434/api'
      - OLLAMA_BASE_URL=http://ollama:11434
    # extra_hosts:
    #   - host.docker.internal:host-gateway

# volumes:
#   postgres-db-volume:
